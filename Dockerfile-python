ARG NETWORK=cn
ARG APT_REPO_CN=mirrors.aliyun.com
ARG APT_REPO_GLOBAL=deb.debian.org
ARG APT_REPO_FILE=/etc/apt/sources.list.d/debian.sources
ARG PIP_REPO_CN=https://pypi.tuna.tsinghua.edu.cn/simple
ARG PIP_TRUSTED_HOST=pypi.tuna.tsinghua.edu.cn
ARG PIP_REPO_GLOBAL=https://pypi.org/simple
ARG POETRY_REPO_CN=https://pypi.tuna.tsinghua.edu.cn/simple
ARG POETRY_REPO_GLOBAL=https://pypi.org/simple
ARG PYTHON_VERSION=3.10-slim-bookworm

FROM python:${PYTHON_VERSION} as builder

ENV NETWORK=${NETWORK}
ENV APT_REPO_CN=${APT_REPO_CN}
ENV APT_REPO_GLOBAL=${APT_REPO_GLOBAL}
ENV APT_REPO_FILE=${APT_REPO_FILE}
ENV PIP_REPO_CN=${PIP_REPO_CN}
ENV PIP_REPO_GLOBAL=${PIP_REPO_GLOBAL}
ENV POETRY_REPO_CN=${POETRY_REPO_CN}
ENV POETRY_REPO_GLOBAL=${POETRY_REPO_GLOBAL}
ENV PIP_INDEX_URL=${PIP_REPO_CN}
ENV PIP_TRUSTED_HOST=${PIP_TRUSTED_HOST}

# Set APT repository based on NETWORK argument
# Set PIP repository based on NETWORK argument

COPY ./scripts/setup-debian.sh /usr/local/bin/setup-debian.sh
# RUN ls -al /usr/local/bin/setup-debian.sh
RUN chmod +x /usr/local/bin/setup-debian.sh && /usr/local/bin/setup-debian.sh set_apt_repo && \
    /usr/local/bin/setup-debian.sh set_pip_repo


# Install Poetry with selected repo
# RUN pip install --no-cache-dir poetry

WORKDIR /app

ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
# Install Python dependencies
RUN pip install --root-user-action ignore --no-cache-dir \
    playwright==1.52.0 \
    BeautifulSoup4==4.13.4 && \
    playwright install --with-deps chromium;

# delete playwright cache
# rm -rf /root/.cache/ms-playwright/*

CMD ["python", "--version"]


# Copy project files only if they exist
# COPY pyproject.toml* poetry.lock* LICENSE* ./

# RUN /usr/local/bin/setup-debian.sh setup_poetry

# # Runtime stage - use Alpine for small size
# FROM python:3.10-alpine

# LABEL org.opencontainers.image.authors="ymc-github <yemiancheng@gmail.com>; yemiancheng <yemiancheng1993@163.com>"

# WORKDIR /app

# # Copy virtual environment from builder stage
# COPY --from=builder /app/.venv /app/.venv

# # Ensure the virtual environment is on the PATH
# ENV PATH="/app/.venv/bin:$PATH"

# # Copy the rest of the application code
# COPY . .

# run with non-root user
# RUN adduser -D playwright && \
#     chown -R playwright:playwright /app
# USER playwright

# use custom timezone
# RUN ln -snf /usr/share/zoneinfo/$TIMEZONE /etc/localtime && echo $TIMEZONE > /etc/timezon

# Run the application
# CMD ["python", "--version"]
# ENTRYPOINT ["python", "scripts/fresh-gh-proxy.py"]
